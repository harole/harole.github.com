<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RegExp | Harole's blog]]></title>
  <link href="http://harole.github.com/blog/categories/regexp/atom.xml" rel="self"/>
  <link href="http://harole.github.com/"/>
  <updated>2014-09-15T20:44:08+08:00</updated>
  <id>http://harole.github.com/</id>
  <author>
    <name><![CDATA[harole]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[正则表达式（RegExp）方法，test() 和 exec() 区别。]]></title>
    <link href="http://harole.github.com/blog/2013/10/07/regexp-test-exec-difference/"/>
    <updated>2013-10-07T19:10:00+08:00</updated>
    <id>http://harole.github.com/blog/2013/10/07/regexp-test-exec-difference</id>
    <content type="html"><![CDATA[<h4>test() 方法。</h4>

<blockquote><ol>
<li>语法：RegExpObject.test(string)；</li>
<li>作用：用来检测字符串是否匹配某个模式（该模式由 RegExpObject 设置）；</li>
<li>返回值：当 string 含有与 RegExpObject匹配的文本，则返回 true，否则返回 false。</li>
</ol>
</blockquote>

<p>实例：</p>

<pre><code>var str = "this is harole's blog.";
var pattern = new RegExp( "harole" );
var result = pattern.test( "sam harole freestyle" );
alert( "this is harole's blog : " + result );
</code></pre>

<!-- more -->


<h4>exec() 方法。</h4>

<pre><code>1. 语法：RegExpObject.test(string)；
2. 作用：用来获取字符串匹配某个模式（该模式由 RegExpObject 设置）的内容；
3. 返回值：如果存在满足 RegExpObject，则把匹配到的结果依次存入一个数组中，并返回数组；如果没有找到匹配的字符串，则返回 null。
</code></pre>

<h4>match() 方法。</h4>

<pre><code>1. 语法：RegExpObject.test(string)；
2. 作用：用来检测字符串是否匹配某个模式（该模式由 RegExpObject 设置）；
3. 返回值：当 string 含有与 RegExpObject匹配的文本，则返回 true，否则返回 false。
</code></pre>

<p>总结：1. test() 和 exec() 比较：</p>

<p>未完成，请耐心等待。。。</p>
]]></content>
  </entry>
  
</feed>
